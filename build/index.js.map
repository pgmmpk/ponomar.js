{"version":3,"file":"index.js","sources":["../src/Sunrise.js","../src/JDate.js","../src/Paschalion.js","../src/evaluate.js","../src/assert.js","../src/parsing.js","../src/Ponomar.js","../src/Database.js","../src/DatabaseFs.js","../src/DatabaseHttp.js"],"sourcesContent":["/**\n=head3 DESCRIPTION\n\nModified version of C<Astro::Sunrise> to work with dates on the Julian Calendar. Dependency on C<DateTime> removed.\nRemoved wrapper methods, which have been moved to C<Ponomar::JDate>. Basic computation kept in tact.\n\n=head3 SPECIAL THANKS\n\nModified from C<Astro::Sunrise>, which is by\nRon Hill\nL<rkhill@firstlight.net>.\n\n=head3 COPYRIGHT and LICENSE\n\nHere is the copyright information provided by Ron Hill in Astro::Sunrise:\n\nWritten as DAYLEN.C, 1989-08-16. Modified to SUNRISET.C, 1992-12-01.\n\nCopyright Paul Schlyter, 1989, 1992. Released to the public domain by Paul Schlyter, December 1992.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\nOF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n=head3 SEE ALSO\n\nL<Astro::Sunrise>\n */\n\n\nexport function sunRiseSet(d, lon, lat, altit, upperLimb) {\n    const sidtime = revolution( GMST0(d) + 180.0 + lon);\n    const [sRA, sdec, sr] = sunRAdec(d);\n    const tsouth = 12.0 - rev180(sidtime - sRA) / 15.0;\n    const sradius = 0.2666 / sr;\n\n    if (upperLimb) {\n        altit -= sradius;\n    }\n\n    // Compute the diurnal arc that the Sun traverses to reach\n    // the specified altitude altit:\n    const cost = ( sind(altit) - sind(lat) * sind(sdec)) / ( cosd(lat) * cosd(sdec) );\n    let t;\n    if (cost >= 1.0) {\n        console.warn('Sun never rises!');\n        t = 0.0;  // sun always below altit\n    } else if (cost <= -1.0) {\n        console.warn('Sun never sets!');\n        t = 12.0; // sun always above altit\n    } else {\n        t = acosd(cost) / 15.0;  //The diurnal arc, hours\n    }\n\n    // Store rise and set times - in hours UT\n    return [tsouth - t, tsouth + t];\n}\n\n/**\n * computes GMST0, the Greenwich Mean Sidereal Time\n * at 0h UT (i.e. the sidereal time at the Greenwhich meridian at\n * 0h UT).  GMST is then the sidereal time at Greenwich at any\n * time of the day..\n */\nfunction GMST0(d) {\n    return revolution( ( 180.0 + 356.0470 + 282.9404 ) + ( 0.9856002585 + 4.70935E-5 ) * d );\n}\n\n/**\n# Computes the Sun's ecliptic longitude and distance\n# at an instant given in d, number of days since\n# 2000 Jan 0.0.\n# _RETURN\n# ecliptic longitude and distance\n# ie. $True_solar_longitude, $Solar_distance\n */\nfunction sunpos(d) {\n    // Compute mean elements\n    const Mean_anomaly_of_sun = revolution( 356.0470 + 0.9856002585 * d );\n    const Mean_longitude_of_perihelion = 282.9404 + 4.70935E-5 * d;\n    const Eccentricity_of_Earth_orbit  = 0.016709 - 1.151E-9 * d;\n\n    // Compute true longitude and radius vector\n    const Eccentric_anomaly =\n      Mean_anomaly_of_sun + Eccentricity_of_Earth_orbit * RAD2DEG *\n      sind(Mean_anomaly_of_sun) *\n      ( 1.0 + Eccentricity_of_Earth_orbit * cosd(Mean_anomaly_of_sun) );\n\n    const x = cosd(Eccentric_anomaly) - Eccentricity_of_Earth_orbit;\n\n    const y =\n      Math.sqrt( 1.0 - Eccentricity_of_Earth_orbit * Eccentricity_of_Earth_orbit ) *\n        sind(Eccentric_anomaly);\n\n    const Solar_distance = Math.sqrt( x*x + y*y );\n    const True_anomaly = atan2d( y, x );\n\n    let True_solar_longitude = True_anomaly + Mean_longitude_of_perihelion;\n    if (True_solar_longitude >= 360.0) {\n        True_solar_longitude -= 360.0; // Make it 0..360 degrees\n    }\n\n    return [Solar_distance, True_solar_longitude];\n}\n\n// compute RA and dec\n// Sun's Right Ascension (RA) and Declination (dec)\nfunction sunRAdec(d) {\n    // Compute Sun's ecliptical coordinates\n    const [r, lon] = sunpos(d);\n\n    // Compute ecliptic rectangular coordinates (z=0)\n    let x = r * cosd(lon);\n    let y = r * sind(lon);\n\n    // Compute obliquity of ecliptic (inclination of Earth's axis)\n    const obl_ecl = 23.4393 - 3.563E-7 * d;\n\n    // Convert to equatorial rectangular coordinates - x is unchanged\n    let z = y * sind(obl_ecl);\n    y = y * cosd(obl_ecl);\n\n    // Convert to spherical coordinates\n    const RA  = atan2d( y, x );\n    const dec = atan2d( z, Math.sqrt( x*x + y*y ) );\n\n    return [RA, dec, r];\n\n}\n\nconst RAD2DEG = 180.0 / Math.PI;\n\nfunction sind(x) { return Math.sin(x / RAD2DEG); }\nfunction cosd(x) { return Math.cos(x / RAD2DEG); }\nfunction acosd(x) { return Math.acos(x) * RAD2DEG; }\nfunction atan2d(x, y) { return Math.atan2(x, y) * RAD2DEG; }\n\n/**\n# _GIVEN\n# any angle\n#\n# _THEN\n#\n# reduces any angle to within the first revolution\n# by subtracting or adding even multiples of 360.0\n#\n#\n# _RETURN\n */\nfunction revolution(x) {\n    return ( x - 360.0 * Math.floor( x / 360.0 ) );\n}\n\n/**\n# _GIVEN\n#\n# any angle\n#\n# _THEN\n#\n# Reduce input to within +180..+180 degrees\n#\n#\n# _RETURN\n#\n# angle that was reduced\n */\nfunction rev180(x) {\n    return ( x - 360.0 * Math.floor( x / 360.0 + 0.5 ) );\n}\n\nexport const ALT_DEFAULT = -35/60;\nexport const ALT_CIVIL   = -6.0;\nexport const ALT_NAUTICAL= -12.0;\nexport const ALT_AMATEUR = -15.0;\nexport const ALT_ASTRONOMICAL = -18.0;\n\n/**\n=item getSunrise($longitude, $latitude, $TimeZone, [$DST, $ALT])\n\nReturn the sunrise/sunset for a given day.\n\n Eastern longitude is entered as a positive number\n Western longitude is entered as a negative number\n Northern latitude is entered as a positive number\n Southern latitude is entered as a negative number\n\nExample:\n\nC<< ($sunrise, $sunset) = $date->getSunrise($longitude, $latitude, $TimeZone, $DST, $ALT); >>\n\nReturns the sunrise and sunset times, in HH:MM format.\nNote: C<$Time Zone> is the offset from UTC and $<DST> is daylight\nsaving time (C<1> means DST is in effect and C<0> means it is not).  If C<$ALT> is not specified,\na default altitude of C<-.0833> is used. Note that adding C<1> to C<$TimeZone> during DST\nand specifying C<$DST> as C<0> is the same as indicating the\nTime Zone correctly and specifying C<$DST> as C<1>.\n\nThere are a number of values of C<$ALT> to choose from.  The default is\nC<-0.833> because this is what most countries use. Here is the list of other common values:\n\n=over 4\n\n=item C<0> degrees\n\nCenter of Sun's disk touches a mathematical horizon\n\n=item C<-0.25> degrees\n\nSun's upper limb touches a mathematical horizon\n\n=item C<-0.583> degrees\n\nCenter of Sun's disk touches the horizon; atmospheric refraction accounted for\n\n=item C<-0.833> degrees, DEFAULT\n\nSun's supper limb touches the horizon; atmospheric refraction accounted for\n\n=item C<-6> degrees, CIVIL\n\nCivil twilight (one can no longer read outside without artificial illumination)\n\n=item C<-12> degrees, NAUTICAL\n\nNautical twilight (navigation using a sea horizon no longer possible)\n\n=item C<-15> degrees, AMATEUR\n\nAmateur astronomical twilight (the sky is dark enough for most astronomical observations)\n\n=item C<-18> degrees, ASTRONOMICAL\n\nAstronomical twilight (the sky is completely dark)\n\n\n\n\n*/\n\n/* This macro computes times for sunrise/sunset.                      */\n\n\n\n\nconst OBSERVATIONS = {\n    // Sunrise/Sunset\n    // Sunrise/set is considered to occur when the Sun's upper limb is\n    // 35 arc minutes below the horizon (this accounts for the refraction\n    // of the Earth's atmosphere).\n    'default': { altit: -35.0 / 60.0, upperLimb: true },\n\n    // Civil twilight.\n    // Civil twilight starts/ends when the Sun's center is 6 degrees below\n    // the horizon.\n    'civil': { altit: -6.0, upperLimb: false },\n\n    // Nautical twilight.\n    // Nautical twilight starts/ends when the Sun's center is 12 degrees\n    // below the horizon.\n    'nautical': { altit: -12.0, upperLimb: false },\n\n    // Amature twilight.\n    // Amature astronomical twilight starts/ends when the Sun's center is 15 degrees\n    // below the horizon.\n    'amature': { altit: -15.0, upperLimb: false },\n\n    // Astronomical twilight.\n    // Astronomical twilight starts/ends when the Sun's center is 18 degrees\n    // below the horizon.\n    'astronomical': { altit: -18.0, upperLimb: false },\n};\n\nexport function getSunriseSunset(jday, lon, lat, options) {\n    const { observation, tzoffset } = Object.assign({\n        observation: 'default',\n        tzoffset: 0.0,\n    }, options);\n\n    let alt;\n    let upperLimb;\n    if (typeof observation === 'string') {\n        if (OBSERVATIONS[observation] === undefined) {\n            throw new Error('Unrecognized observation type. Expect one of: ' +\n                '\"default\", \"civil\", \"nautical\", \"amature\", or \"astronomical\".\\n' +\n                'Alternatively, you can pass an object with \"altit\" and \"upperLimb\" keys ' +\n                'to set custom observation parameters.'\n            );\n        }\n        ({ altit: alt, upperLimb } = OBSERVATIONS[observation]);\n    } else {\n        ({ altit: alt, upperLimb } = observation);\n    }\n\n\t// NOTE: 2451545 IS THE JULIAN DAY OF DECEMBER 19, 1999 (ACCORDING TO THE JULIAN CALENDAR)\n    const d = jday - 2451544 + 0.5 - lon / 360.0;\n    let [sunrise, sunset] = sunRiseSet(d, lon, lat, alt, upperLimb);\n\n    const sunriseStr = formatHourMinute(getHourMinute(sunrise + tzoffset));\n    const sunsetStr = formatHourMinute(getHourMinute(sunset + tzoffset));\n\n    return [sunriseStr, sunsetStr];\n}\n\n\nfunction getHourMinute(t) {\n    //t += 0.5 / 60.0;  // add 30 seconds for correct rounding\n\n    while (t < 0.0) t += 24.0;\n    while (t >= 24.0) t -= 24.0;\n\n    const hour = Math.floor(t);\n    const minute = Math.floor(60.0 * (t - hour));\n\n    return  { hour, minute };\n}\n\nfunction formatHourMinute({hour, minute}) {\n    const dec2 = x => x < 10 ? '0' + x.toString() : x.toString();\n\n    return dec2(hour) + ':' + dec2(minute);\n}\n","import { getSunriseSunset } from './Sunrise.js';\n// http://www.magister.msk.ru/library/bible/comment/nkss/nkss22.htm\n\nconst GREGORIAN_INCEPTION_AS_GREGORIAN_DATE = [1582, 10, 15];\nconst GREGORIAN_INCEPTION_AS_JULIAN_DATE = [1582, 10, 5];\n\nfunction getJulianDay(ymd, options) {\n    options = Object.assign({\n        fromJulianDate: true\n    }, options);\n\n    let [year, month, day] = ymd;\n\n    if (month < 1 || month > 12) {\n        throw new Error('bad month value: ' + month);\n    }\n\n    if (day < 1 || day > 31) {\n        throw new Error('bad day value: ' + month);\n    }\n\n    // before Gregorian reform calendars are assumed to be identical\n    if (!options.fromJulianDate && ymd < GREGORIAN_INCEPTION_AS_GREGORIAN_DATE) {\n        if ( ymd > GREGORIAN_INCEPTION_AS_JULIAN_DATE) {\n            [year, month, day] = GREGORIAN_INCEPTION_AS_JULIAN_DATE;\n        }\n        options.fromJulianDate = true;\n    }\n\n    const a = Math.floor((14 - month) / 12);\n    const y = year + 4800 - a;\n    const m = month + 12 * a - 3;\n\n    let jday = day + Math.floor((153 * m + 2) / 5) + 365 * y + Math.floor(y / 4) - 32083;\n\n    if (!options.fromJulianDate) {\n        jday -= Math.floor(y / 100);\n        jday += Math.floor(y / 400);\n        jday += 38;\n    }\n\n    return jday;\n}\n\nfunction getYmd(jday, options) {\n    options = Object.assign({\n        julian: true\n    }, options);\n\n    let f = jday + 1401;\n    if (!options.julian) {\n        f += Math.floor((Math.floor((4 * jday + 274277) / 146097) * 3) / 4) - 38;\n    }\n\n    let e = f * 4 + 3;\n    let g = Math.floor((e % 1461) / 4);\n    let h = 5 * g + 2;\n\n    let day = Math.floor((h % 153) / 5) + 1;\n    let month = ( Math.floor(h / 153) + 2 ) % 12 + 1;\n    let year = Math.floor(e / 1461) - 4716 + Math.floor((14 - month) / 12);\n\n    return [year, month, day];\n}\n\n// function julianToGregorian(ymd) {\n//     if (ymd < GREGORIAN_INCEPTION_AS_JULIAN_DATE) {\n//         return ymd;\n//     }\n//     const jday = getJulianDay(ymd, {fromJulianDate: true});\n//     return getYmd(jday, {julian: false});\n// }\n\nfunction gregorianToJulian(ymd) {\n    if (ymd < GREGORIAN_INCEPTION_AS_GREGORIAN_DATE) {\n        if ( ymd > GREGORIAN_INCEPTION_AS_JULIAN_DATE) {\n            return GREGORIAN_INCEPTION_AS_JULIAN_DATE;\n        }\n        return ymd;\n    }\n    const jday = getJulianDay(ymd, {fromJulianDate: false});\n    return getYmd(jday, {julian: true});\n}\n\n/**\n  Julian date\n */\nexport default class JDate {\n    constructor({year, month, day}) {\n        if (year === undefined) {\n            throw new Error('bad year value: ' + year);\n        }\n        if (month === undefined || month < 1 || month > 12) {\n            throw new Error('bad month value: ' + month);\n        }\n        if (day === undefined || day < 1 || day > 31) {\n            throw new Error('bad day value: ' + day);\n        }\n        this.jday = getJulianDay([year, month, day]);\n        [this.year, this.month, this.day] = [year, month, day];\n    }\n\n    static fromJulianDay(jday) {\n        const [year, month, day] = getYmd(jday);\n        return new this({\n            year: year,\n            month: month,\n            day: day,\n        });\n    }\n\n    static fromGregorian({month, day, year}) {\n        [year, month, day] = gregorianToJulian([year, month, day]);\n        return new this({\n            year: year,\n            month: month,\n            day: day,\n        });\n    }\n\n    get dayOfWeek() {\n        return (this.jday + 1) % 7;\n    }\n\n    get dayOfYear() {\n        const jbar = this.jday + 32083;\n        const da   = (jbar + 1460) % 1461 + 1;\n        if (da === 1461) {\n            return 366; // Feb 29!\n        }\n\n        return (da + 59 + 364) % 365; // Jan 1 is doy 0\n    }\n\n    add(days) {\n        return JDate.fromJulianDay(this.jday + days);\n    }\n\n    daysSince(other) {\n        return this.jday - other.jday;\n    }\n\n    toGregorian() {\n        const [year, month, day] = getYmd(this.jday, {julian: false});\n        return { year, month, day };\n    }\n\n    /**\n     * Returns a tuple of two strings: sunrise and sunset times formatted as HH:MM\n     *\n     * @param {*} longtitude\n     * @param {*} lattitude\n     * @param {*} options\n     *      - tzoffset offset (in hours) to UTC.\n     *      - observation one of \"default\", \"civil\", \"nautical\", \"amature\", \"astronomical\",\n     *            or an object specifying the observation altitude and whether refraction\n     *            correction is needed. For example: { altit: 12.0, upperLimb: false }.\n     * ```\n     * const tzoffset = new Date().getTimezoneOffset() / -60.0;\n     * ```\n     */\n    getSunriseSunset(longtitude, lattitude, options) {\n        return getSunriseSunset(this.jday, longtitude, lattitude, options);\n    }\n}","import JDate from './JDate.js';\n\n/**\n * Returns indiction for the given year.\n */\nexport function getIndiction(year) {\n    if (year < 313) {\n        throw new Error('year is before 312AD!');\n    }\n\n    return (year - 312 + 14) % 15 + 1;\n}\n\n/**\n * Returns solar cycle for the given year.\n */\nexport function getSolarCycle(year) {\n    return (year + 20 + 27) % 28 + 1;\n}\n\n/**\n * Returns lunar (Metonic) cycle for the given year.\n */\nexport function getLunarCycle(year) {\n    return (year - 2 + 18) % 19 + 1;\n}\n\n/**\n * Given a year AD, returns the concurrent (a number from 1 to 7).\n *\n * The concurrent numbers are associated with the Slavonic вруцелѣто letters so \n * that 1 => А, 2 => В, etc.\n */\nexport function getConcurrent(year) {\n    const krugSolntsu = (year + 20) % 28;\n    let vrutseleto = krugSolntsu + Math.floor(krugSolntsu / 4);\n    vrutseleto = (vrutseleto + 6) % 7 + 1;\n\treturn vrutseleto;\n}\n\n/**\n * Given a year AD, returns the foundation (the \"age of the moon\" on March 1 of that year)\n */\nexport function getFoundation(year) {\n\tconst osnovanie = (((year + 1) % 19) * 11) % 30;\n\treturn osnovanie === 0 ? 29 : osnovanie;\n}\n\n/**\n * Given\n *\n * a year AD, returns the Epacta. Note that this is not the Roman Epacta (the age of the moon on January 1). \n * Rather, this is the number that needs to be added to make the Foundation C<21> (or C<51>).\n */\nexport function getEpacta(year) {\n    return (51 - getFoundation(year)) % 30;\n}\n\n/**\n * Returns Julian date of the Pascha for the given year.\n */\nexport function getPascha(year) {\n\t// Use the Gaussian formulae to calculate the Alexandria Paschallion\n\tconst a = year % 4;\n\tconst b = year % 7;\n\tconst c = year % 19;\n\tconst d = (19 * c + 15) % 30;\n\tconst e = (2 * a + 4 * b - d + 34) % 7;\n\tconst month = Math.floor((d + e + 114) / 31);  // Month of pascha e.g. march=3\n\tconst day  = ((d + e + 114) % 31) + 1; // Day of pascha in the month\n\n\treturn new JDate({day: day, month: month, year: year});\n}\n\nconst letters  = [\"А\", \"Б\", \"В\", \"Г\", \"Д\", \"Е\", \"Ж\", \"Ѕ\", \"З\", \"И\", \"І\", \"К\", \"Л\", \"М\", \"Н\", \"О\", \"П\", \"Р\", \"С\", \"Т\", \"Ꙋ\", \"Ф\", \"Х\", \"Ѿ\", \"Ц\", \"Ч\", \"Ш\", \"Щ\", \"Ъ\", \"Ы\", \"Ь\", \"Ѣ\", \"Ю\", \"Ѫ\", \"Ѧ\"];\n\n/**\n * Given a year AD, returns the Key of Boundaries, a letter indicating the structure of the year.\n */\nexport function getKeyOfBoundaries(year) {\n    const pascha = getPascha(year);\n    const boundary = new JDate({year: year, month: 3, day: 22});\n\n    return letters[pascha.jday - boundary.jday];\n}\n\n/**\n * Convenience function that returns all Pascha-related information in one object.\n */\nexport default function paschalion(year) {\n    return {\n        pascha: getPascha(year),\n        indiction: getIndiction(year),\n        solarCycle: getSolarCycle(year),\n        lunarCycle: getLunarCycle(year),\n        concurrent: getConcurrent(year),\n        foundation: getFoundation(year),\n        epacta: getEpacta(year),\n        keyOfBoundaries: getKeyOfBoundaries(year),\n    };\n}","/**\n * Use like this:\n * \n * const result = evaluate(\"x+y\", {x:5, y:6});\n * // 11\n */\n\nexport default function evaluate(command, context) {\n    const args = Object.keys(context);\n    const f = Function.apply(null, [...args, 'return (' + command + ');']);\n\n    return f.apply(null, args.map(x=>context[x]));\n}","export default function(x, message) {\n    if (!x) {\n        throw new Error('Assertion failed: ' + JSON.stringify(message));\n    }\n}","import { fromString, scan, withPeer, ENTER, EXIT, TEXT } from '@innodatalabs/lxmlx-js';\nimport evaluate from './evaluate.js';\nimport assert from './assert.js';\n\n/**\n * Hides parts of XML tree that do not pass expression in \"Cmd\" attribute.\n */\nexport function* scanFilter(text, context) {\n    const xml = fromString(text);\n    const stack = [];\n    let skip = false;\n    for (const e of scan(xml)) {\n        if (e.type === ENTER) {\n            if (skip) {\n                stack.push(false);\n                continue;\n            }\n            if (e.attrib.Cmd !== undefined) {\n                const take = context === undefined ? true : evaluate(e.attrib.Cmd, context);\n                if (!take) {\n                    skip = true;\n                    stack.push(true);\n                    continue;\n                }\n            }\n            stack.push(false);\n            yield e;\n        } else if (e.type === EXIT) {\n            if (stack.pop()) {\n                skip = false;\n                continue;\n            } else if (!skip) {\n                yield e;\n            }\n        } else if (!skip) {\n            yield e;\n        }\n    }\n}\n\nexport function* parseSaints(text, source, context) {\n    const stack = [];\n    let skip = 0;\n    for (const e of scanFilter(text, context)) {\n        if (e.type === ENTER) {\n            assert(e.tag === 'SAINT' || e.tag === 'DAY', e);\n            if (e.tag === 'SAINT') {\n                assert(e.attrib.CId !== undefined, e);\n                const tone = e.attrib.Tone === undefined ? null :\n                    (context === undefined ? e.attrib.Tone : evaluate(e.attrib.Tone, context));\n                yield {\n                    cid: e.attrib.CId,\n                    // sid: e.attrib.SId,\n                    src: source,\n                    menologion: e.attrib.Src || '',\n                    // tone: (tone + 7) % 8 + 1,\n                    type: tone,\n                };\n            }\n        }\n    }\n}\n\nexport function* parseFastingRules(text, context) {\n    for (const e of scanFilter(text, context)) {\n        if (e.type === ENTER) {\n            assert(e.tag === 'FASTING' || e.tag === 'PERIOD' || e.tag === 'RULE', e);\n            assert(e.attrib.Tone === undefined, e);\n            if (e.tag === 'RULE') {\n                yield e.attrib.Case;\n            }\n        }\n    }\n}\n\nexport function* parseCommands(text, context) {\n    for (const e of scanFilter(text, context)) {\n        if (e.type === ENTER) {\n            assert(e.tag === 'COMMAND' || e.tag === 'DATA', e);\n            if (e.tag === 'COMMAND') {\n                yield {\n                    name: e.attrib.Name,\n                    value: e.attrib.Value,\n                    comment: e.attrib.Comment,\n                };\n            }\n        }\n    }\n}\n\nconst _SERVICES = ['VESPERS', 'MATINS', 'LITURGY', 'SEXTE', 'PRIMES', 'TERCE', 'NONE'];\nexport function parseLife(text, context) {\n    const services = [];\n    const saint = {\n        info: null,\n        life: null,\n        name: null,\n        ref: null,\n    };\n\n    let readingLife = false;\n    let serviceType;\n    for (const [e, p] of withPeer(scanFilter(text, context))) {\n        if (e.type === ENTER) {\n            if (e.tag === 'NAME') {\n                if (saint.name) {\n                    saint.name = { ...saint.name, ...e.attrib };\n                } else {\n                    saint.name = { ...e.attrib };\n                }\n                delete saint.name.Cmd;\n            } else if (e.tag === 'INFO') {\n                if (saint.info) {\n                    saint.info = { ...saint.info, ...e.attrib };\n                } else {\n                    saint.info = { ...e.attrib };\n                }\n            } else if (e.tag === 'REF') {\n                if (e.attrib.Type === undefined) {\n                    saint.ref = e.attrib.CId;\n                }\n            } else if (e.tag === 'SERVICE') {\n                saint.type = e.attrib.Type || null;  // aka rank\n                if (context !== undefined) context.dRank = +saint.type;\n            } else if (e.tag === 'SCRIPTURE') {\n                if (serviceType !== undefined) {\n                    const reading = {\n                        effWeek: e.attrib.EffWeek || null,\n                        pericope: e.attrib.Pericope || null,\n                        reading: e.attrib.Reading,\n                        type: e.attrib.Type || null,\n                    };\n                    for (const s of services) {\n                        if (s.type === serviceType) {\n                            s.readings.push(reading);\n                        }\n                    }\n                }\n            } else if (e.tag === 'LIFE') {\n                saint.life = { ...e.attrib, Text: '' };\n                delete saint.life.Cmd;\n                readingLife = true;\n            } else if (_SERVICES.includes(e.tag)) {\n                serviceType = e.tag.toLowerCase();\n                if (serviceType === 'primes') {\n                    serviceType = 'prime';  // to follow Perl\n                }\n                services.push({\n                    type: serviceType,\n                    readings: [],\n                });\n            }\n        } else if (e.type === EXIT) {\n            if (p.tag === 'LIFE') {\n                readingLife = false;\n            } else if (_SERVICES.includes(p.tag)) {\n                serviceType = undefined;\n            }\n        } else if (e.type === TEXT && readingLife) {\n            saint.life.Text = saint.life.Text + e.text.replace(/\\r/g, \"\");\n        }\n    }\n\n    services.forEach(s => {\n        if (s.readings.length === 0) {\n            delete s.readings;\n        }\n    });\n\n    return [saint, services];\n}","import paschalion from './Paschalion.js';\nimport evaluate from './evaluate.js';\nimport assert from './assert.js';\nimport { parseCommands, parseFastingRules, parseSaints, parseLife } from './parsing.js';\n\nexport default class Ponomar {\n    constructor(db, date) {\n        this.db = db;\n        this.date = date;\n\n        const year = this.date.year;\n        const thisPascha = paschalion(year).pascha;\n        const nextPascha = paschalion(year + 1).pascha;\n        const lastPascha = paschalion(year - 1).pascha;\n        const nday = this.date.daysSince(thisPascha);\n        const ndayP = this.date.daysSince(lastPascha);\n\n        const ctx = {\n            dow: this.date.dayOfWeek,\n            doy: this.date.dayOfYear,\n            nday,\n            ndayP,\n            ndayF: this.date.daysSince(nextPascha),\n            Year: this.date.year,\n            GS: 1,\n        };\n\n        let text;\n        if (nday >= -70 && nday < 0) {\n            text = this.db.triodion(-nday);\n        } else if (nday < -70) {\n            text = this.db.pentecostarion(ndayP + 1);\n        } else {\n            text = this.db.pentecostarion(nday + 1);\n        }\n\n        this.saints = [];\n        // pentecostarion\n        this.saints.push(...parseSaints(text, 'pentecostarion', ctx));\n        assert(this.saints.length > 0);\n\n        this.tone = this.saints.reduce((total,x)=>x.type !== null ? +x.type : total, 0);\n        if (this.tone === 0) {\n            this.tone = 8;\n        }\n\n        // menaion\n        text = this.db.menaion(this.date.month, this.date.day);\n        this.saints.push(...parseSaints(text, 'menaion', ctx));\n\n        // read lives into saint object\n        for (const saint of this.saints) {\n            saint.info = null;\n            saint.life = null;\n            saint.name = null;\n            saint.ref  = null;\n\n            for (const text of this.db.lives(saint.cid)) {\n                const [s, svc] = parseLife(text, {...ctx, dRank: +saint.type});\n                for (const key of Object.keys(s)) {\n                    if (key === 'name' || key === 'info') {\n                        if (s[key] !== null) {\n                            if (saint[key]) {\n                                saint[key] = { ...saint[key], ...s[key] };\n                            } else {\n                                saint[key] = s[key];\n                            }\n                        }\n                    } else {\n                        saint[key] = s[key];\n                    }\n                    if (s[key] !== null) {\n                        if ((key === 'name' || key === 'info') && saint[key]) {\n                            saint[key] = {...saint[key], ...s[key]};\n                        } else {\n                            saint[key] = s[key];\n                        }\n                    }\n                }\n                if (svc.length > 0) {\n                    if (saint.services === undefined) {\n                        saint.services = svc;\n                    } else {\n                        saint.services.push(...svc);\n                    }\n                }\n            }\n        }\n\n        this.dayRank = this.saints.reduce((tot, x) => {\n            if (x.type === null) return tot;\n            return Math.max(tot, +x.type);\n        }, -1);\n        ctx.dRank = this.dayRank;\n\n        text = this.db.fasting();\n        for (const code of parseFastingRules(text, ctx)) {\n            this.fastingCode = code;  // last one wins...\n        }\n\n        const haveLiturgy = this.saints.reduce((total, saint) => {\n            if (total) return true;\n            if (saint.services !== undefined) {\n                for (const service of saint.services) {\n                    if (service.type === 'liturgy') return true;\n                }\n            }\n            return false;\n        }, false);\n\n        // load commands\n        this.commands = [];\n        if (haveLiturgy) {\n            text = this.db.divineLiturgy();\n            this.commands.push(...parseCommands(text, ctx));\n        }\n    }\n\n    execCommand(rank) {\n        for (const saint of this.saints) {\n            if (saint.src === 'pentecostarion' && (\n                (+saint.cid >= 9000 && +saint.cid <= 9315) ||\n                (+saint.cid >= 9849 && +saint.cid <= 9900)\n            )) {\n                for (const service of saint.services) {\n                    this._execCommand(service, rank);\n                }\n            }\n        }\n    }\n\n    get dRank() {\n        return this.saints.reduce( (total, saint) => {\n            if (saint.src !== 'menaion') return total;\n            if (saint.type === null) return total;\n            if (+saint.type > total) return +saint.type;\n            return total;\n        }, -1);\n    }\n\n    _any(name, ctx) {\n        for (const cmd of this.commands) {\n            if (cmd.name === name && evaluate(cmd.value, ctx)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    async _execCommand(service, rank) {\n        if (service.type !== 'liturgy') {\n            return;\n        }\n\n        const thisPascha = paschalion(this.date.year).pascha;\n        const nextPascha = paschalion(this.date.year + 1).pascha;\n        const lastPascha = paschalion(this.date.year - 1).pascha;\n        const todayCtx = {\n            dRank: rank,\n            dow: this.date.dayOfWeek,\n            doy: this.date.dayOfYear,\n            nday: this.date.daysSince(thisPascha),\n            ndayP: this.date.daysSince(lastPascha),\n            ndayF: this.date.daysSince(nextPascha),\n        };\n\n        // step 0. first check if transfer is implemented\n        // transfer is not implemented during the Pentecostarion / Lenten Triodion periods\n        // (this information is coded in DivineLiturgy.xml)\n        // or the user may override transfer by calling addCommands('Transfer', 0)\n        for (const cmd of this.commands) {\n            if (cmd.name === 'Transfer' && !evaluate(cmd.value, todayCtx)) {\n                return;\n            }\n        }\n\n        // step 1. Check if readings today are suppressed or transferred\n        for (const cmd of this.commands) {\n            if (evaluate(cmd.value, todayCtx) &&\n                    (cmd.name === 'Suppress' || cmd.name === 'Class3Transfers')) {\n                // TODO: we have to figure out if today has Menaion readings.\n                // if (grep { $_ -> hasReadings() } map { $_ -> getServices('liturgy') } $self -> { parent } -> { ponomar } -> getSaints('menaion')) {\n                delete service.readings;\n                return;\n            }\n        }\n\n        const needTomorrow = this._any('TransferRulesB', todayCtx);\n        if (needTomorrow) {\n            const tomorrow = this.date.add(1);\n            const tomorrowPonomar = new Ponomar(this.db, tomorrow);\n            const tomorrowCtx = {\n                dRank: tomorrowPonomar.dRank,\n                dow: tomorrow.dayOfWeek,\n                doy: tomorrow.dayOfYear,\n                nday: tomorrow.daysSince(thisPascha),\n                ndayP: tomorrow.daysSince(lastPascha),\n                ndayF: tomorrow.daysSince(nextPascha),\n                GS: 1,\n            };\n\n            const haveTomorrow = this._any('Class3Transfers', tomorrowCtx);\n            if (haveTomorrow) {\n                for (const s of tomorrowPonomar.saints) {\n                    if (s.src === 'pentecostarion' && s.services !== undefined) {\n                        for (const svc of s.services) {\n                            if (svc.type === 'liturgy' && svc.readings) {\n                                if (service.readings === undefined) {\n                                    service.readings = svc.readings;\n                                } else {\n                                    service.readings.push(...svc.readings);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        const needYesterday = this._any('TransferRulesF', todayCtx);\n        if (needYesterday) {\n            const yesterday = this.date.add(-1);\n            const yesterdayPonomar = new Ponomar(this.db, yesterday);\n            const yesterdayCtx = {\n                dRank: yesterdayPonomar.dRank,\n                dow: yesterday.dayOfWeek,\n                doy: yesterday.dayOfYear,\n                nday: yesterday.daysSince(thisPascha),\n                ndayP: yesterday.daysSince(lastPascha),\n                ndayF: yesterday.daysSince(nextPascha),\n                GS: 1,\n            };\n\n            const haveYesterday = this._any('Class3Transfers', yesterdayCtx);\n            if (haveYesterday) {\n                for (const s of yesterdayPonomar.saints) {\n                    if (s.src === 'pentecostarion' && s.services !== undefined) {\n                        for (const svc of s.services) {\n                            if (svc.type === 'liturgy' && svc.readings) {\n                                if (service.readings === undefined) {\n                                    service.readings = svc.readings;\n                                } else {\n                                    service.readings.push(...svc.readings);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","\nexport class Engine {\n    has(name) {\n        throw new Error('not implemented ' + name);\n    }\n    get(name) {\n        throw new Error('not implemented ' + name);\n    }\n}\n\nexport class Database {\n    constructor(engine) {\n        this._lang;\n        this.engine = engine;\n    }\n\n    lang(l) {\n        this._lang = l;\n        return this;\n    }\n\n    _findBottomUp(path) {\n        if (this._lang === undefined) {\n            throw new Error('lang() not set');\n        }\n        const parts = this._lang.split('/');\n        for (let i = parts.length; i >= 0; i--) {\n            const p = [...parts.slice(0, i), path];\n            const candidate = p.join('/');\n\n            if (this.engine.has(candidate)) {\n                return candidate;\n            }\n        }\n\n        throw new Error('Failed to locate ' + path);\n    }\n\n    * _findTopDown(path) {\n        if (this._lang === undefined) {\n            throw new Error('lang() not set');\n        }\n        const parts = this._lang.split('/');\n        for (let i = 0; i <= parts.length; i++) {\n            const p = [...parts.slice(0, i), path];\n            const candidate = p.join('/');\n\n            if (this.engine.has(candidate)) {\n                yield candidate;\n            }\n        }\n    }\n\n    _read(path) {\n        const fname = this._findBottomUp(path);\n        return this.engine.get(fname);\n    }\n\n    * _readTopDown(path) {\n        for (const fname of this._findTopDown(path)) {\n            yield this.engine.get(fname);\n        }\n    }\n\n    triodion(day) {\n        return this._read(`xml/triodion/${dec2(day)}.xml`);\n    }\n\n    pentecostarion(day) {\n        return this._read(`xml/pentecostarion/${dec2(day)}.xml`);\n    }\n\n    menaion(month, day) {\n        return this._read(`xml/${dec2(month)}/${dec2(day)}.xml`);\n    }\n\n    * lives(cid) {\n        for (const text of this._readTopDown(`xml/lives/${dec2(cid)}.xml`)) {\n            yield text;\n        }\n    }\n\n    fasting() {\n        return this._read(`xml/Commands/Fasting.xml`);\n    }\n\n    divineLiturgy() {\n        return this._read(`xml/Commands/DivineLiturgy.xml`);\n    }\n}\n\nconst dec2 = x => x < 10 ? '0' + x : '' + x;\n","import fs from 'fs';\nimport { Database } from './Database.js';\n\nexport class EngineFs {\n    constructor(baseDir) {\n        const expectedFile = `${baseDir}/xml/Commands/Fasting.xml`;\n        if (!fs.existsSync(expectedFile)) {\n            throw new Error('bad baseDir: ' + baseDir);\n        }\n        this.baseDir = baseDir;\n    }\n\n    has(name) {\n        return fs.existsSync(this.baseDir + '/' + name);\n    }\n    get(name) {\n        return fs.readFileSync(this.baseDir + '/' + name, 'utf8');\n    }\n}\n\nexport class DatabaseFs extends Database {\n    constructor(baseDir) {\n        super(new EngineFs(baseDir));\n    }\n}\n","import { Database } from './Database.js';\n\nexport class EngineHttp {\n    constructor(db) {\n        this.db = db;\n    }\n\n    static async load(url) {\n        const request = await fetch(url);\n        const db = await requiest.json();\n\n        return new EngineHttp(db);\n    }\n\n    has(name) {\n        return this.db[name] !== undeifined;\n    }\n    get(name) {\n        return this.db[name];\n    }\n}\n\nexport class DatabaseHttp extends Database {\n    constructor(url, lang) {\n        super(lang, new EngineHttp(url));\n    }\n}\n"],"names":["fromString","scan","ENTER","EXIT","withPeer","TEXT"],"mappings":"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"}